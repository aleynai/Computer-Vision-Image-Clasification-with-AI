# -*- coding: utf-8 -*-
"""Computer Vision Image Clasification

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IU0ZPB1z9L6_ZU3NaVmvLFPpLttk2pxk

#Computer Vision Image Clasification

```
Melike Aleyna Coşkunkan - Machine Learning Engineer
```

# ⬇️ Data Download
"""

!unzip /content/Planets_Moons_Reduced_Data.zip

"""# 📥 > 📙 Import to Libraries

"""

from tensorflow.keras.models import Model
from keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.layers import *
from tensorflow import keras
from tensorflow.keras import Sequential
import tensorflow as tf

"""#Preparing Dataset"""

train_datagen = ImageDataGenerator(
    validation_split=0.1)
train_generator = train_datagen.flow_from_directory("/content/Planets_Moons",target_size=(128, 128),
                                                    batch_size=128,
                                                    class_mode='categorical',
                                                    interpolation="nearest",
                                                    subset="training")
test_generator = train_datagen.flow_from_directory("/content/Planets_Moons",target_size=(128, 128),
                                                    batch_size=128,
                                                    class_mode='categorical',
                                                    interpolation="nearest",
                                                    subset="validation")2

"""#Model Creating"""

inp = Input(shape = (128,128,3))

model = Conv2D(64,4,strides=1,activation="relu")(inp)
model = MaxPooling2D(2,2)(model)
model = Flatten()(model)
output = Dense(2,activation="softmax")(model)
model = Model(inputs=inp, outputs= output,name="Aleyna")
model.compile(optimizer="adam",loss="categorical_crossentropy",metrics=["accuracy"])

"""# Model Summary"""

model.summary()

"""**Model Fitting**"""

accuracy = model.fit(train_generator,validation_data=test_generator,shuffle=True,epochs=10,batch_size=128)

"""**Model Evaluate**"""

model.evaluate(test_generator)